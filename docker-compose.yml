services:
  postgres:
    image: postgres:17.5-alpine
    container_name: postgres
    env_file: .env
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"]
      interval: 10s
      timeout: 1s
      retries: 3
      start_period: 5s
      start_interval: 5s

  redis:
    image: redis:8.0.2-alpine
    container_name: redis
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    command: [ "redis-server", "--port", "${REDIS_PORT}" ]
    volumes:
      - redis-data:/var/lib/redis/data
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "redis-cli", "-p", "${REDIS_PORT}", "ping" ]
      interval: 10s
      timeout: 1s
      retries: 3
      start_period: 5s

include:
  - path: services/gpt-api/docker-compose.yml
  - path: services/telegram-api/docker-compose.yml
  - path: services/vacancy-parser/docker-compose.yml
  - path: services/vacancy-processor/docker-compose.yml


networks:
  app-network:
    driver: bridge


volumes:
  postgres-data:
  redis-data:
