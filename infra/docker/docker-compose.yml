name: ${ENV_PROJECT_NAME}

services:
  postgres:
    image: postgres:17.5-alpine
    container_name: postgres
    env_file: ../.env
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"]
      interval: 10s
      timeout: 1s
      retries: 3
      start_period: 5s
      start_interval: 5s

  redis:
    image: redis:8.0.2-alpine
    container_name: redis
    env_file: ../.env
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    command: [ "redis-server", "--port", "${REDIS_PORT}" ]
    volumes:
      - redis-data:/data
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "redis-cli", "-p", "${REDIS_PORT}", "ping" ]
      interval: 10s
      timeout: 1s
      retries: 3
      start_period: 5s

  gpt-api:
    extends:
      service: gpt-api
      file: gpt-api/docker-compose.yml

  telegram-api:
    container_name: telegram-api
    extends:
      service: telegram-api
      file: telegram-api/docker-compose.yml

  vacancy-parser:
    extends:
      service: vacancy-parser
      file: vacancy-parser/docker-compose.yml
    depends_on:
      postgres:
        condition: service_healthy
      telegram-api:
        condition: service_healthy

  vacancy-parser-worker:
    extends:
      service: vacancy-parser-worker
      file: vacancy-parser/docker-compose.yml
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy

  vacancy-parser-beat:
    extends:
      service: vacancy-parser-beat
      file: vacancy-parser/docker-compose.yml
    depends_on:
      redis:
        condition: service_healthy

  vacancy-parser-flower:
    extends:
      service: vacancy-parser-flower
      file: vacancy-parser/docker-compose.yml

  vacancy-processor:
    extends:
      service: vacancy-processor
      file: vacancy-processor/docker-compose.yml
    depends_on:
      postgres:
        condition: service_healthy
      vacancy-parser:
        condition: service_healthy

networks:
  app-network:
    driver: bridge


volumes:
  postgres-data:
  redis-data:
