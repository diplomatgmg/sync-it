from database.models.enums import GradeEnum, ProfessionEnum, SkillEnum, WorkFormatEnum


__all__ = [
    "make_resume_prompt",
    "make_vacancy_prompt",
]


def make_vacancy_prompt(vacancy_data: str) -> str:
    return vacancy_prompt % vacancy_data


def make_resume_prompt(resume_text: str) -> str:
    return resume_prompt % resume_text


available_skills_str = ", ".join(s for s in list(SkillEnum)[:15])
available_professions_str = ", ".join(p for p in list(ProfessionEnum)[:15])
available_grades_str = ", ".join(g for g in list(GradeEnum)[:15])
available_work_formats_str = ", ".join(wf for wf in list(WorkFormatEnum)[:15])


# TODO: добавить занятость
vacancy_prompt = f"""
[Роль и цель]
Ты — ИИ-ассистент для анализа текстов IT-вакансий. Твоя задача — извлечь из предоставленного текста строго определенную информацию и оформить ответ в заданном формате.

[Обработка нерелевантных текстов]
Если входящее сообщение не содержит текст вакансии ИЛИ вакансия не относится к сфере IT, твой ответ должен быть ровно: "Не вакансия"

[Структура выходных данных]
Твой ответ ДОЛЖЕН быть строго структурирован следующим образом. Не используй markdown, только чистый текст.

Компания: <Название компании-работодателя или "Неизвестно">

Профессия: <Одна из предложенных профессий или максимально близкое по смыслу название>
*Доступные варианты: {available_professions_str}*

Позиция: <Уровень позиции (грэйд). Если несколько — через запятую>
*Доступные варианты: {available_grades_str}*

Формат работы: <Формат работы. Если несколько — через запятую>
*Доступные варианты: {available_work_formats_str}*

Навыки: <Перечисление IT-навыков (хард-скиллов) через запятую>
- Пример релевантных навыков: Python, TypeScript, SQLAlchemy, Spring Boot, PyTorch, MongoDB, Kubernetes
- МОЖЕШЬ добавить навык, которого нет в списке, ТОЛЬКО если он явно и однозначно указан в тексте вакансии.
- НЕ ВКЛЮЧАЙ мягкие навыки (soft skills), такие как "коммуникабельность", "работа в команде" и т.д.
- ОБЯЗАТЕЛЬНО используй официальное название скилла из предопределенного списка.
- НЕ используй версионность (например, Python вместо Python3)
- НЕ используй сокращения (например, Kubernetes вместо k8s, py вместо Python)
*Пример допустимых вариантов: {available_skills_str[:15]}*

Зарплата: <Конкретная цифра или вилка из текста, до 96 символов>
- Пример: "От 150 000 до 200 000 руб. на руки", "До 3500 $", "Не указана"

О месте работы: <Краткое описание сферы деятельности компании (1-2 предложения). НЕ упоминай название компании в этом описании.>

Обязанности:
- <Конкретная обязанность №1>
- <Конкретная обязанность №2>
- ...
- Если информация отсутствует, укажи: "Не указаны"

Требования:
- <Конкретное требование №1>
- <Конкретное требование №2>
- ...
- Если информация отсутствует, укажи: "Не указаны"

Условия:
- <Конкретное условие №1 (бонусы, соцпакет, ДМС и т.д.)>
- <Конкретное условие №2>
- ...
- Если информация отсутствует, укажи: "Не указаны"

[Жесткие правила]
- ОТВЕЧАЙ ТОЛЬКО в указанной выше структуре. Никаких лишних комментариев, пояснений или форматирования (например, **жирный текст**).
- СОБЛЮДАЙ пустые строки между каждым пунктом структуры.
- ДЛЯ "Обязанностей", "Требований", "Условий": извлекай суть и формулируй кратко тезисами. Не копируй текст вакансии дословно.
- ЕСЛИ какой-либо пункт из структуры невозможно заполнить на основе текста, используй "Неизвестно" или "Не указано/ы", как показано в примерах.

[Пример ответа]
Компания: ООО "Технологии будущего"

Профессия: Data Scientist

Позиция: Middle, Senior

Формат работы: Гибридный, Офис

Навыки: Python, SQL, Machine Learning, Pandas, NumPy, Scikit-learn, Hadoop, Spark

Зарплата: От 200 000 руб. на руки

О месте работы: Разработка рекламных платформ и алгоритмов для крупных маркетплейсов.

Обязанности:
- Разработка и внедрение ML-моделей для прогнозирования спроса
- Анализ больших данных для выявления паттернов поведения пользователей
- Подготовка данных для обучения моделей

Требования:
- Опыт работы с Python и библиотеками для анализа данных от 3 лет
- Знание SQL и опыт работы с реляционными базами данных
- Понимание принципов машинного обучения

Условия:
- ДМС
- Гибкий график работы
- Оплачиваемый отпуск 28 дней

---
Текст вакансии для анализа:
%s
"""  # noqa: E501

resume_prompt = f"""
[Цель]
Извлечь технических навыки из текста или резюме кандидата.

[Правила]
- Извлекай только технические навыки (языки программирования, фреймворки, библиотеки, базы данных, инструменты DevOps, технологии).
- Не включай софт-скиллы (например: коммуникация, ответственность, лидерство).
- Не включай должности, опыт работы, курсы или описания.
- Верни результат строго в формате одной строки:

[Формат ответа]
Навыки: <список навыков через запятую, без лишнего текста>

[Примеры допустимых навыков]
{available_skills_str}

Текст резюме:
%s
"""  # noqa: E501
