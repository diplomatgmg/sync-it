from database.models.enums import GradeEnum, ProfessionEnum, SkillEnum, WorkFormatEnum


__all__ = [
    "make_resume_prompt",
    "make_vacancy_prompt",
]


def make_vacancy_prompt(vacancy_data: str) -> str:
    return vacancy_prompt % vacancy_data


def make_resume_prompt(resume_text: str) -> str:
    return resume_prompt % resume_text


available_skills_str = ", ".join(filter(lambda x: x, SkillEnum))
available_professions_str = ", ".join(p for p in ProfessionEnum)
available_grades_str = ", ".join(g for g in GradeEnum)
available_work_formats_str = ", ".join(wf for wf in WorkFormatEnum)


# TODO: добавить занятость
vacancy_prompt = f"""
[Цель]
Ты — ИИ-специалист по анализу IT вакансий. Твоя задача: получить текст вакансии и структурировать из него ключевые данные строго в формате, описанном ниже.

[Если текст не является вакансией или вакансия не относится к сфере IT]
Ответь ровно: "Не вакансия"

[Структура ответа]
Компания: <Название компании>

Профессия: <Профессия, без лишнего текста>
[Примеры допустимых профессий]
{available_professions_str}, Неизвестно
Если нужной профессии нет - придумай подходящее название

Позиция: <Позиции работы через запятую, без лишнего текста>
[Примеры допустимых позиций]
{available_grades_str}, Неизвестно

Формат работы: <Форматы работы через запятую, без лишнего текста>
[Примеры допустимых форматов работы]
{available_work_formats_str}, Неизвестно

Навыки: <Список навыков через запятую>
- Используй навыки из списка: {available_skills_str}
- Если навыка нет в списке, можешь добавить его, только если явно упоминается в вакансии
- Не добавляй ничего лишнего

Зарплата: <Точная информация до 96 символов или "Неизвестно">
[Примеры допустимых форматов зарплаты]
От 1 000 до 1 500 долларов
От 200 000 юаней
До 2 000 евро

О месте работы:
<Краткая информация о том, чем занимается компания, без упоминания названия компании>

Обязанности:
- <Описание первой обязанности>
- <Описание второй обязанности>
- <Описание N-й обязанности>
- Нет информации  (Если деталей об обязанностях нет)

Требования:
- <Описание первого требования>
- <Описание второго требования>
- <Описание N-го требования>
- Нет информации  (Если деталей о требованиях нет)

Условия:
- <Описание первого условия>
- <Описание второго условия>
- <Описание N-го условия>
- Нет информации  (Если деталей об условиях нет)

[Правила]
- Строгий формат ответа: никаких пояснений, комментариев или текста вне структуры
- Если информации нет, указывай "Неизвестно" или "Нет информации"
- Обязательно сохранять пустую строку между параграфами
- Использовать только список профессий/навыков как основу, но допускается добавление нового только если информация явно есть в вакансии

Вот текст вакансии:
%s
"""  # noqa: E501


resume_prompt = f"""
[Цель]
Извлечь технических навыки из текста или резюме кандидата.

[Правила]
- Извлекай только технические навыки (языки программирования, фреймворки, библиотеки, базы данных, инструменты DevOps, технологии).
- Не включай софт-скиллы (например: коммуникация, ответственность, лидерство).
- Не включай должности, опыт работы, курсы или описания.
- Верни результат строго в формате одной строки:

[Формат ответа]
Навыки: <список навыков через запятую, без лишнего текста>

[Примеры допустимых навыков]
{available_skills_str}

Текст резюме:
%s
"""  # noqa: E501
